#!/bin/bash
# get configs
source do-config
# Script to use doctl to build dev.herb.ga server for me
echo "Creating a new $DROP_SIZE $DROP_IMAGE droplet for $DROP_NAME "
# Create the droplet
doctl compute droplet create -v $DROP_NAME --region nyc1 --image $DROP_IMAGE --size $DROP_SIZE --ssh-keys "$DROP_SSH_FINGERPRINT"  --enable-ipv6 --enable-private-networking --user-data-file ubuntu-user-data --wait
echo ""
echo "Done, Current droplets are..."
doctl compute droplet list
# get the droplet id
# ubuherb_id=`doctl compute droplet list ubu.herb.ga --no-header --format 'ID'`
# get the ipv4
DROP_IP=`doctl compute droplet list $DROP_NAME --no-header --format 'PublicIPv4'`
# Create a domain record for this new droplet using the ipv4
echo ""
if ( echo "$DROP_NAME" | grep -Eq '^*\.test$' ) ;
then
  echo "Adding $DROP_NAME to /etc/hosts"
  echo "$DROP_IP $DROP_NAME" | sudo tee -a /etc/hosts > /dev/null
  echo ""
  echo "Done, Current Hostfile is..."
  grep $DROP_DOMAIN /etc/hosts
else
  echo "Adding DNS for $DROP_NAME"
  doctl compute domain records create $DROP_DOMAIN -v --record-type A --record-name $DROP_SUBDOMAIN --record-data $DROP_IP --record-ttl 300
  echo ""
  echo "Done, Current DNS Records are..."
  doctl compute domain records list $DROP_DOMAIN
fi
# Ask if we should stop here
read -p "Would you like to continue with the ansible setup? or exit instead (y/n) " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "Exiting (Skipping Ansible Setup)"
    echo "You can Manually run it using: bash do-setup"
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
fi
echo "Carry on with Ansible Setup!"

echo "Pinging the droplet ($DROP_IP) to see if it is up"
function is_droplet_up () {
  i="1"
  total=15
  while [ $i -le $total ]
  do
      echo "Pinging... $i/$total"
      #ping -c 1 dev.herb.ga &> /dev/null; echo $?
      if ping -c 1 $DROP_IP
      then
          echo "Success, Droplet is up"
          return 0
      else
          echo "Trying again..."
      fi
      i=$[$i+1]
  done
  echo "Ping failed $total times, exiting"
  return 1
}
if is_droplet_up
then
  echo "Running Setup Script..."
  bash do-setup
else
  echo "Skipping Setup Script, As the droplet is not up"
  echo "You can Manually Run: bash do-setup"
fi
